<?xml version="1.0" encoding="UTF-8"?> 
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans		
		http://www.springframework.org/schema/beans/spring-beans.xsd	
		http://www.springframework.org/schema/aop 				
		http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context	
		http://www.springframework.org/schema/context/spring-context-4.0.xsd	
		http://www.springframework.org/schema/tx 	
		http://www.springframework.org/schema/tx/spring-tx.xsd	
		http://www.springframework.org/schema/mvc	 
		http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
		
	
	<!-- 数据库连接参数 -->
	<bean id="propertyConfigurer" 
	class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	<property name="location" value="classpath:resources/jdbc.properties" />
	</bean>
	
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
	destroy-method="close">
	<property name="driverClassName" value="${jdbc.driver}" />
	<property name="url" value="${jdbc.url}" />
	<property name="username" value="${jdbc.username}" />
	<property name="password" value="${jdbc.password}" />
	<!-- 事务是否自动提交 -->
	<property name="defaultAutoCommit" value="${defaultAutoCommit}"></property>
	</bean>
	
	<!-- 数据库连接对象 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	<property name="dataSource" ref="dataSource" />
	<!-- 自动扫描mapping.xml文件 -->
	<property name="mapperLocations" value="classpath:com/yan/mapper/*.xml"></property>
	<property name="configLocation" value="classpath:resources/mybatis-config.xml"></property>  

	</bean>
	
	<!-- 数据库操作对象 -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
	<constructor-arg ref="sqlSessionFactory" />
	</bean>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.yan.dao" />  
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>  
    </bean>
    
    <!-- 登录拦截器 -->
<!--     <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/*"/>  
            <mvc:exclude-mapping path="/login"/>
            <mvc:exclude-mapping path="/logout"/>
            <mvc:exclude-mapping path="/doLogin"/>
            <mvc:exclude-mapping path="/resource/**"/>
            <bean class="util.myInterceptor">
            </bean>
        </mvc:interceptor>
    </mvc:interceptors> -->
		
	<!-- 事务管理 -->	
	<bean id="transactionManager"
	class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 事务管理方法匹配规则 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
	<tx:attributes>
	<tx:method name="delete*" propagation="REQUIRED" read-only="false" 
	           rollback-for="java.lang.Exception"/>
	<tx:method name="insert*" propagation="REQUIRED" read-only="false" 
	           rollback-for="java.lang.Exception" /> 
	<tx:method name="update*" propagation="REQUIRED" read-only="false" 
	           rollback-for="java.lang.Exception" />
	<tx:method name="save*" propagation="REQUIRED" read-only="false" 
	           rollback-for="java.lang.Exception" />
	<tx:method name="*" propagation="SUPPORTS" read-only="true"/>
	</tx:attributes>
	</tx:advice>
	
	
	<!--  事务处理作用范围指定service下面的所有类-->
	<aop:config>
	<aop:pointcut id="allServiceMethods" expression="execution(* service..*.*(..))" />
	<aop:advisor pointcut-ref="allServiceMethods" advice-ref="txAdvice" />
	</aop:config>
	
	
	

<!-- 配置自定扫描的包 -->
<context:component-scan base-package="com.yan.controller"></context:component-scan>
<context:component-scan base-package="com.yan.dao"></context:component-scan>
<context:component-scan base-package="com.yan.service"></context:component-scan>
<!-- 配置视图解析器: 如何把 handler 方法返回值解析为实际的物理视图 -->
<bean
	class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	<property name="prefix" value="/views/"></property>
	<property name="suffix" value=".jsp"></property>
</bean>

<!-- 在实际开发中通常都需配置 mvc:annotation-driven 标签 -->
<mvc:annotation-driven></mvc:annotation-driven>

<!-- 解决不能点击登陆 button -->
<mvc:default-servlet-handler />

<mvc:annotation-driven></mvc:annotation-driven>
<!-- 文件上传 -->
<!-- 配置 MultipartResolver -->
<bean id="multipartResolver"
class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
<property name="defaultEncoding" value="UTF-8"></property>
</bean>

<!-- 解决注册后面弹出来信息配置文件 -->
<bean id="messageSource"
class="org.springframework.context.support.ResourceBundleMessageSource">
<property name="basename" value="msg"></property>
</bean>


<!-- 配置 SessionLocalResolver -->
<bean id="localeResolver"
class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
</bean>
<!-- 配置 LocaleChanceInterceptor -->
<mvc:interceptors>
<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"></bean>
</mvc:interceptors>
</beans>
